{"version":3,"file":"bundle.js","sources":["../../../../../svelte/node_modules/svelte/internal/index.mjs","../../../../../../../../../node_modules/svelte-navigator/src/utils.js","../../../../../svelte/node_modules/svelte/store/index.mjs","../../../../../../../../../node_modules/svelte-navigator/src/contexts.js","../../../../../../../../../node_modules/svelte-navigator/src/paths.js","../../../../../../../../../node_modules/svelte-navigator/src/warning.js","../../../../../../../../../node_modules/svelte-navigator/src/routes.js","../../../../../../../../../node_modules/svelte-navigator/src/history.js","../../../../../../../../../node_modules/svelte-navigator/src/a11y.js","../../../../../../../../../node_modules/svelte-navigator/src/Router.svelte","../../../../../../../../../node_modules/svelte-navigator/src/hooks.js","../../../../../../../../../node_modules/svelte-navigator/src/Route.svelte","../../../../../../../../../node_modules/svelte-navigator/src/Link.svelte","../../../../../svelte/src/app/pages/Login.svelte","../../../../../svelte/src/app/pages/UmschG.svelte","../../../../../svelte/src/app/pages/DisText.svelte","../../../../../svelte/src/app/pages/LED.svelte","../../../../../svelte/src/app/pages/MotorG.svelte","../../../../../svelte/src/app/pages/Home.svelte","../../../../../svelte/src/app/routing/Router.svelte","../../../../../svelte/src/routes/App.svelte","../../../../../svelte/src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nexport const isUndefined = value => typeof value === \"undefined\";\n\nexport const isFunction = value => typeof value === \"function\";\n\nexport const isNumber = value => typeof value === \"number\";\n\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nexport function shouldNavigate(event) {\n\treturn (\n\t\t!event.defaultPrevented &&\n\t\tevent.button === 0 &&\n\t\t!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n\t);\n}\n\nexport function createCounter() {\n\tlet i = 0;\n\t/**\n\t * Returns an id and increments the internal state\n\t * @returns {number}\n\t */\n\treturn () => i++;\n}\n\n/**\n * Create a globally unique id\n *\n * @returns {string} An id\n */\nexport function createGlobalId() {\n\treturn Math.random().toString(36).substring(2);\n}\n\nexport function findClosest(tagName, element) {\n\twhile (element && element.tagName !== tagName) {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\telement = element.parentNode;\n\t}\n\treturn element;\n}\n\nexport const isSSR = typeof window === \"undefined\";\n\nexport function addListener(target, type, handler) {\n\ttarget.addEventListener(type, handler);\n\treturn () => target.removeEventListener(type, handler);\n}\n\nexport const createInlineStyle = (disableInlineStyles, style) =>\n\tdisableInlineStyles ? {} : { style };\nexport const createMarkerProps = disableInlineStyles => ({\n\t\"aria-hidden\": \"true\",\n\t...createInlineStyle(disableInlineStyles, \"display:none;\"),\n});\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","/*\n * Adapted from https://github.com/EmilTholin/svelte-routing\n *\n * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n */\n\nconst createKey = ctxName => `@@svnav-ctx__${ctxName}`;\n\n// Use strings instead of objects, so different versions of\n// svelte-navigator can potentially still work together\nexport const LOCATION = createKey(\"LOCATION\");\nexport const ROUTER = createKey(\"ROUTER\");\nexport const ROUTE = createKey(\"ROUTE\");\nexport const ROUTE_PARAMS = createKey(\"ROUTE_PARAMS\");\nexport const FOCUS_ELEM = createKey(\"FOCUS_ELEM\");\n","export const paramRegex = /^:(.+)/;\n\nexport const substr = (str, start, end) => str.substr(start, end);\n\n/**\n * Check if `string` starts with `search`\n * @param {string} string\n * @param {string} search\n * @return {boolean}\n */\nexport const startsWith = (string, search) =>\n\tsubstr(string, 0, search.length) === search;\n\n/**\n * Check if `segment` is a root segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isRootSegment = segment => segment === \"\";\n\n/**\n * Check if `segment` is a dynamic segment\n * @param {string} segment\n * @return {boolean}\n */\nexport const isDynamic = segment => paramRegex.test(segment);\n\n/**\n * Check if `segment` is a splat\n * @param {string} segment\n * @return {boolean}\n */\nexport const isSplat = segment => segment[0] === \"*\";\n\n/**\n * Strip potention splat and splatname of the end of a path\n * @param {string} str\n * @return {string}\n */\nexport const stripSplat = str => str.replace(/\\*.*$/, \"\");\n\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} str\n * @return {string}\n */\nexport const stripSlashes = str => str.replace(/(^\\/+|\\/+$)/g, \"\");\n\n/**\n * Split up the URI into segments delimited by `/`\n * @param {string} uri\n * @return {string[]}\n */\nexport function segmentize(uri, filterFalsy = false) {\n\tconst segments = stripSlashes(uri).split(\"/\");\n\treturn filterFalsy ? segments.filter(Boolean) : segments;\n}\n\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nexport const addQuery = (pathname, query) =>\n\tpathname + (query ? `?${query}` : \"\");\n\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nexport function combinePaths(basepath, path) {\n\tconst barePath =\n\t\tpath === \"/\" ? basepath : `${stripSlashes(basepath)}/${stripSlashes(path)}`;\n\treturn `${stripSlashes(barePath)}/`;\n}\n\n/**\n * Normalizes a basepath\n *\n * @param {string} path\n * @returns {string}\n *\n * @example\n * normalizePath(\"base/path/\") // -> \"/base/path\"\n */\nexport const normalizePath = path => `/${stripSlashes(path)}`;\n\n/**\n * Joins and normalizes multiple path fragments\n *\n * @param {...string} pathFragments\n * @returns {string}\n */\nexport function join(...pathFragments) {\n\tconst joinFragment = fragment => segmentize(fragment, true).join(\"/\");\n\tconst joinedSegments = pathFragments.map(joinFragment).join(\"/\");\n\treturn normalizePath(joinedSegments);\n}\n","import { isFunction } from \"./utils\";\n\n// We start from 1 here, so we can check if an origin id has been passed\n// by using `originId || <fallback>`\nexport const LINK_ID = 1;\nexport const ROUTE_ID = 2;\nexport const ROUTER_ID = 3;\nexport const USE_FOCUS_ID = 4;\nexport const USE_LOCATION_ID = 5;\nexport const USE_MATCH_ID = 6;\nexport const USE_NAVIGATE_ID = 7;\nexport const USE_PARAMS_ID = 8;\nexport const USE_RESOLVABLE_ID = 9;\nexport const USE_RESOLVE_ID = 10;\nexport const NAVIGATE_ID = 11;\n\nconst labels = {\n\t[LINK_ID]: \"Link\",\n\t[ROUTE_ID]: \"Route\",\n\t[ROUTER_ID]: \"Router\",\n\t[USE_FOCUS_ID]: \"useFocus\",\n\t[USE_LOCATION_ID]: \"useLocation\",\n\t[USE_MATCH_ID]: \"useMatch\",\n\t[USE_NAVIGATE_ID]: \"useNavigate\",\n\t[USE_PARAMS_ID]: \"useParams\",\n\t[USE_RESOLVABLE_ID]: \"useResolvable\",\n\t[USE_RESOLVE_ID]: \"useResolve\",\n\t[NAVIGATE_ID]: \"navigate\",\n};\n\nexport const createLabel = labelId => labels[labelId];\n\nexport function createIdentifier(labelId, props) {\n\tlet attr;\n\tif (labelId === ROUTE_ID) {\n\t\tattr = props.path ? `path=\"${props.path}\"` : \"default\";\n\t} else if (labelId === LINK_ID) {\n\t\tattr = `to=\"${props.to}\"`;\n\t} else if (labelId === ROUTER_ID) {\n\t\tattr = `basepath=\"${props.basepath || \"\"}\"`;\n\t}\n\treturn `<${createLabel(labelId)} ${attr || \"\"} />`;\n}\n\nexport function createMessage(labelId, message, props, originId) {\n\tconst origin = props && createIdentifier(originId || labelId, props);\n\tconst originMsg = origin ? `\\n\\nOccurred in: ${origin}` : \"\";\n\tconst label = createLabel(labelId);\n\tconst msg = isFunction(message) ? message(label) : message;\n\treturn `<${label}> ${msg}${originMsg}`;\n}\n\nexport const createMessageHandler =\n\thandler =>\n\t(...args) =>\n\t\thandler(createMessage(...args));\n\nexport const fail = createMessageHandler(message => {\n\tthrow new Error(message);\n});\n\n// eslint-disable-next-line no-console\nexport const warn = createMessageHandler(console.warn);\n","import {\n\tsegmentize,\n\tjoin,\n\taddQuery,\n\tstartsWith,\n\tparamRegex,\n\tisSplat,\n\tisRootSegment,\n\tisDynamic,\n\tstripSplat,\n\tnormalizePath,\n\tsubstr,\n} from \"./paths\";\nimport { ROUTER_ID, fail } from \"./warning\";\nimport { isUndefined } from \"./utils\";\n\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nexport function rankRoute(route, index) {\n\tconst score = route.default\n\t\t? 0\n\t\t: segmentize(route.fullPath).reduce((acc, segment) => {\n\t\t\t\tlet nextScore = acc;\n\t\t\t\tnextScore += SEGMENT_POINTS;\n\n\t\t\t\tif (isRootSegment(segment)) {\n\t\t\t\t\tnextScore += ROOT_POINTS;\n\t\t\t\t} else if (isDynamic(segment)) {\n\t\t\t\t\tnextScore += DYNAMIC_POINTS;\n\t\t\t\t} else if (isSplat(segment)) {\n\t\t\t\t\tnextScore -= SEGMENT_POINTS + SPLAT_PENALTY;\n\t\t\t\t} else {\n\t\t\t\t\tnextScore += STATIC_POINTS;\n\t\t\t\t}\n\n\t\t\t\treturn nextScore;\n\t\t  }, 0);\n\n\treturn { route, score, index };\n}\n\n/**\n * Give a score to all routes and sort them on that\n * @param {object[]} routes\n * @return {object[]}\n */\nexport function rankRoutes(routes) {\n\treturn (\n\t\troutes\n\t\t\t.map(rankRoute)\n\t\t\t// If two routes have the exact same score, we go by index instead\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.score < b.score) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a.score > b.score) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn a.index - b.index;\n\t\t\t})\n\t);\n}\n\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { fullPath, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nexport function pick(routes, uri) {\n\tlet bestMatch;\n\tlet defaultMatch;\n\n\tconst [uriPathname] = uri.split(\"?\");\n\tconst uriSegments = segmentize(uriPathname);\n\tconst isRootUri = uriSegments[0] === \"\";\n\tconst ranked = rankRoutes(routes);\n\n\tfor (let i = 0, l = ranked.length; i < l; i++) {\n\t\tconst { route } = ranked[i];\n\t\tlet missed = false;\n\t\tconst params = {};\n\n\t\t// eslint-disable-next-line no-shadow\n\t\tconst createMatch = uri => ({ ...route, params, uri });\n\n\t\tif (route.default) {\n\t\t\tdefaultMatch = createMatch(uri);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst routeSegments = segmentize(route.fullPath);\n\t\tconst max = Math.max(uriSegments.length, routeSegments.length);\n\t\tlet index = 0;\n\n\t\tfor (; index < max; index++) {\n\t\t\tconst routeSegment = routeSegments[index];\n\t\t\tconst uriSegment = uriSegments[index];\n\n\t\t\tif (!isUndefined(routeSegment) && isSplat(routeSegment)) {\n\t\t\t\t// Hit a splat, just grab the rest, and return a match\n\t\t\t\t// uri:   /files/documents/work\n\t\t\t\t// route: /files/* or /files/*splatname\n\t\t\t\tconst splatName = routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n\t\t\t\tparams[splatName] = uriSegments\n\t\t\t\t\t.slice(index)\n\t\t\t\t\t.map(decodeURIComponent)\n\t\t\t\t\t.join(\"/\");\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (isUndefined(uriSegment)) {\n\t\t\t\t// URI is shorter than the route, no match\n\t\t\t\t// uri:   /users\n\t\t\t\t// route: /users/:userId\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst dynamicMatch = paramRegex.exec(routeSegment);\n\n\t\t\tif (dynamicMatch && !isRootUri) {\n\t\t\t\tconst value = decodeURIComponent(uriSegment);\n\t\t\t\tparams[dynamicMatch[1]] = value;\n\t\t\t} else if (routeSegment !== uriSegment) {\n\t\t\t\t// Current segments don't match, not dynamic, not splat, so no match\n\t\t\t\t// uri:   /users/123/settings\n\t\t\t\t// route: /users/:id/profile\n\t\t\t\tmissed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!missed) {\n\t\t\tbestMatch = createMatch(join(...uriSegments.slice(0, index)));\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn bestMatch || defaultMatch || null;\n}\n\n/**\n * Check if the `route.fullPath` matches the `uri`.\n * @param {Object} route\n * @param {string} uri\n * @return {?object}\n */\nexport function match(route, uri) {\n\treturn pick([route], uri);\n}\n\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nexport function resolve(to, base) {\n\t// /foo/bar, /baz/qux => /foo/bar\n\tif (startsWith(to, \"/\")) {\n\t\treturn to;\n\t}\n\n\tconst [toPathname, toQuery] = to.split(\"?\");\n\tconst [basePathname] = base.split(\"?\");\n\tconst toSegments = segmentize(toPathname);\n\tconst baseSegments = segmentize(basePathname);\n\n\t// ?a=b, /users?b=c => /users?a=b\n\tif (toSegments[0] === \"\") {\n\t\treturn addQuery(basePathname, toQuery);\n\t}\n\n\t// profile, /users/789 => /users/789/profile\n\tif (!startsWith(toSegments[0], \".\")) {\n\t\tconst pathname = baseSegments.concat(toSegments).join(\"/\");\n\t\treturn addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n\t}\n\n\t// ./       , /users/123 => /users/123\n\t// ../      , /users/123 => /users\n\t// ../..    , /users/123 => /\n\t// ../../one, /a/b/c/d   => /a/b/one\n\t// .././one , /a/b/c/d   => /a/b/c/one\n\tconst allSegments = baseSegments.concat(toSegments);\n\tconst segments = [];\n\n\tallSegments.forEach(segment => {\n\t\tif (segment === \"..\") {\n\t\t\tsegments.pop();\n\t\t} else if (segment !== \".\") {\n\t\t\tsegments.push(segment);\n\t\t}\n\t});\n\n\treturn addQuery(`/${segments.join(\"/\")}`, toQuery);\n}\n\n/**\n * Normalizes a location for consumption by `Route` children and the `Router`.\n * It removes the apps basepath from the pathname\n * and sets default values for `search` and `hash` properties.\n *\n * @param {Object} location The current global location supplied by the history component\n * @param {string} basepath The applications basepath (i.e. when serving from a subdirectory)\n *\n * @returns The normalized location\n */\nexport function normalizeLocation(location, basepath) {\n\tconst { pathname, hash = \"\", search = \"\", state } = location;\n\tconst baseSegments = segmentize(basepath, true);\n\tconst pathSegments = segmentize(pathname, true);\n\twhile (baseSegments.length) {\n\t\tif (baseSegments[0] !== pathSegments[0]) {\n\t\t\tfail(\n\t\t\t\tROUTER_ID,\n\t\t\t\t`Invalid state: All locations must begin with the basepath \"${basepath}\", found \"${pathname}\"`,\n\t\t\t);\n\t\t}\n\t\tbaseSegments.shift();\n\t\tpathSegments.shift();\n\t}\n\treturn {\n\t\tpathname: join(...pathSegments),\n\t\thash,\n\t\tsearch,\n\t\tstate,\n\t};\n}\n\nconst normalizeUrlFragment = frag => (frag.length === 1 ? \"\" : frag);\n\n/**\n * Creates a location object from an url.\n * It is used to create a location from the url prop used in SSR\n *\n * @param {string} url The url string (e.g. \"/path/to/somewhere\")\n * @returns {{ pathname: string; search: string; hash: string }} The location\n *\n * @example\n * ```js\n * const path = \"/search?q=falafel#result-3\";\n * const location = parsePath(path);\n * // -> {\n * //   pathname: \"/search\",\n * //   search: \"?q=falafel\",\n * //   hash: \"#result-3\",\n * // };\n * ```\n */\nexport const parsePath = path => {\n\tconst searchIndex = path.indexOf(\"?\");\n\tconst hashIndex = path.indexOf(\"#\");\n\tconst hasSearchIndex = searchIndex !== -1;\n\tconst hasHashIndex = hashIndex !== -1;\n\tconst hash = hasHashIndex\n\t\t? normalizeUrlFragment(substr(path, hashIndex))\n\t\t: \"\";\n\tconst pathnameAndSearch = hasHashIndex ? substr(path, 0, hashIndex) : path;\n\tconst search = hasSearchIndex\n\t\t? normalizeUrlFragment(substr(pathnameAndSearch, searchIndex))\n\t\t: \"\";\n\tconst pathname =\n\t\t(hasSearchIndex\n\t\t\t? substr(pathnameAndSearch, 0, searchIndex)\n\t\t\t: pathnameAndSearch) || \"/\";\n\treturn { pathname, search, hash };\n};\n\n/**\n * Joins a location object to one path string.\n *\n * @param {{ pathname: string; search: string; hash: string }} location The location object\n * @returns {string} A path, created from the location\n *\n * @example\n * ```js\n * const location = {\n *   pathname: \"/search\",\n *   search: \"?q=falafel\",\n *   hash: \"#result-3\",\n * };\n * const path = stringifyPath(location);\n * // -> \"/search?q=falafel#result-3\"\n * ```\n */\nexport const stringifyPath = location => {\n\tconst { pathname, search, hash } = location;\n\treturn pathname + search + hash;\n};\n\n/**\n * Resolves a link relative to the parent Route and the Routers basepath.\n *\n * @param {string} path The given path, that will be resolved\n * @param {string} routeBase The current Routes base path\n * @param {string} appBase The basepath of the app. Used, when serving from a subdirectory\n * @returns {string} The resolved path\n *\n * @example\n * resolveLink(\"relative\", \"/routeBase\", \"/\") // -> \"/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/\") // -> \"/absolute\"\n * resolveLink(\"relative\", \"/routeBase\", \"/base\") // -> \"/base/routeBase/relative\"\n * resolveLink(\"/absolute\", \"/routeBase\", \"/base\") // -> \"/base/absolute\"\n */\nexport function resolveLink(path, routeBase, appBase) {\n\treturn join(appBase, resolve(path, routeBase));\n}\n\n/**\n * Get the uri for a Route, by matching it against the current location.\n *\n * @param {string} routePath The Routes resolved path\n * @param {string} pathname The current locations pathname\n */\nexport function extractBaseUri(routePath, pathname) {\n\tconst fullPath = normalizePath(stripSplat(routePath));\n\tconst baseSegments = segmentize(fullPath, true);\n\tconst pathSegments = segmentize(pathname, true).slice(0, baseSegments.length);\n\tconst routeMatch = match({ fullPath }, join(...pathSegments));\n\treturn routeMatch && routeMatch.uri;\n}\n","/*\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n *\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nimport { parsePath } from \"./routes\";\nimport { createGlobalId, isSSR, isNumber, addListener } from \"./utils\";\nimport { warn, NAVIGATE_ID } from \"./warning\";\n\nconst POP = \"POP\";\nconst PUSH = \"PUSH\";\nconst REPLACE = \"REPLACE\";\n\nfunction getLocation(source) {\n\treturn {\n\t\t...source.location,\n\t\tpathname: encodeURI(decodeURI(source.location.pathname)),\n\t\tstate: source.history.state,\n\t\t_key: (source.history.state && source.history.state._key) || \"initial\",\n\t};\n}\n\nfunction createHistory(source) {\n\tlet listeners = [];\n\tlet location = getLocation(source);\n\tlet action = POP;\n\n\tconst notifyListeners = (listenerFns = listeners) =>\n\t\tlistenerFns.forEach(listener => listener({ location, action }));\n\n\treturn {\n\t\tget location() {\n\t\t\treturn location;\n\t\t},\n\t\tlisten(listener) {\n\t\t\tlisteners.push(listener);\n\n\t\t\tconst popstateListener = () => {\n\t\t\t\tlocation = getLocation(source);\n\t\t\t\taction = POP;\n\t\t\t\tnotifyListeners([listener]);\n\t\t\t};\n\n\t\t\t// Call listener when it is registered\n\t\t\tnotifyListeners([listener]);\n\n\t\t\tconst unlisten = addListener(source, \"popstate\", popstateListener);\n\t\t\treturn () => {\n\t\t\t\tunlisten();\n\t\t\t\tlisteners = listeners.filter(fn => fn !== listener);\n\t\t\t};\n\t\t},\n\t\t/**\n\t\t * Navigate to a new absolute route.\n\t\t *\n\t\t * @param {string|number} to The path to navigate to.\n\t\t *\n\t\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t\t * @param {Object} options\n\t\t * @param {*} [options.state] The state will be accessible through `location.state`\n\t\t * @param {boolean} [options.replace=false] Replace the current entry in the history\n\t\t * stack, instead of pushing on a new one\n\t\t */\n\t\tnavigate(to, options) {\n\t\t\tconst { state = {}, replace = false } = options || {};\n\t\t\taction = replace ? REPLACE : PUSH;\n\t\t\tif (isNumber(to)) {\n\t\t\t\tif (options) {\n\t\t\t\t\twarn(\n\t\t\t\t\t\tNAVIGATE_ID,\n\t\t\t\t\t\t\"Navigation options (state or replace) are not supported, \" +\n\t\t\t\t\t\t\t\"when passing a number as the first argument to navigate. \" +\n\t\t\t\t\t\t\t\"They are ignored.\",\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\taction = POP;\n\t\t\t\tsource.history.go(to);\n\t\t\t} else {\n\t\t\t\tconst keyedState = { ...state, _key: createGlobalId() };\n\t\t\t\t// try...catch iOS Safari limits to 100 pushState calls\n\t\t\t\ttry {\n\t\t\t\t\tsource.history[replace ? \"replaceState\" : \"pushState\"](\n\t\t\t\t\t\tkeyedState,\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tto,\n\t\t\t\t\t);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tsource.location[replace ? \"replace\" : \"assign\"](to);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlocation = getLocation(source);\n\t\t\tnotifyListeners();\n\t\t},\n\t};\n}\n\nfunction createStackFrame(state, uri) {\n\treturn { ...parsePath(uri), state };\n}\n\n// Stores history entries in memory for testing or other platforms like Native\nfunction createMemorySource(initialPathname = \"/\") {\n\tlet index = 0;\n\tlet stack = [createStackFrame(null, initialPathname)];\n\n\treturn {\n\t\t// This is just for testing...\n\t\tget entries() {\n\t\t\treturn stack;\n\t\t},\n\t\tget location() {\n\t\t\treturn stack[index];\n\t\t},\n\t\taddEventListener() {},\n\t\tremoveEventListener() {},\n\t\thistory: {\n\t\t\tget state() {\n\t\t\t\treturn stack[index].state;\n\t\t\t},\n\t\t\tpushState(state, title, uri) {\n\t\t\t\tindex++;\n\t\t\t\t// Throw away anything in the stack with an index greater than the current index.\n\t\t\t\t// This happens, when we go back using `go(-n)`. The index is now less than `stack.length`.\n\t\t\t\t// If we call `go(+n)` the stack entries with an index greater than the current index can\n\t\t\t\t// be reused.\n\t\t\t\t// However, if we navigate to a path, instead of a number, we want to create a new branch\n\t\t\t\t// of navigation.\n\t\t\t\tstack = stack.slice(0, index);\n\t\t\t\tstack.push(createStackFrame(state, uri));\n\t\t\t},\n\t\t\treplaceState(state, title, uri) {\n\t\t\t\tstack[index] = createStackFrame(state, uri);\n\t\t\t},\n\t\t\tgo(to) {\n\t\t\t\tconst newIndex = index + to;\n\t\t\t\tif (newIndex < 0 || newIndex > stack.length - 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex = newIndex;\n\t\t\t},\n\t\t},\n\t};\n}\n\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst canUseDOM = !!(\n\t!isSSR &&\n\twindow.document &&\n\twindow.document.createElement\n);\n// Use memory history in iframes (for example in Svelte REPL)\nconst isEmbeddedPage = !isSSR && window.location.origin === \"null\";\nconst globalHistory = createHistory(\n\tcanUseDOM && !isEmbeddedPage ? window : createMemorySource(),\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","import { get } from \"svelte/store\";\nimport { tick } from \"svelte\";\nimport { warn, ROUTER_ID, ROUTE_ID } from \"./warning\";\nimport { addListener } from \"./utils\";\n\n// We need to keep the focus candidate in a separate file, so svelte does\n// not update, when we mutate it.\n// Also, we need a single global reference, because taking focus needs to\n// work globally, even if we have multiple top level routers\n// eslint-disable-next-line import/no-mutable-exports\nexport let focusCandidate = null;\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let initialNavigation = true;\n\n/**\n * Check if RouterA is above RouterB in the document\n * @param {number} routerIdA The first Routers id\n * @param {number} routerIdB The second Routers id\n */\nfunction isAbove(routerIdA, routerIdB) {\n\tconst routerMarkers = document.querySelectorAll(\"[data-svnav-router]\");\n\tfor (let i = 0; i < routerMarkers.length; i++) {\n\t\tconst node = routerMarkers[i];\n\t\tconst currentId = Number(node.dataset.svnavRouter);\n\t\tif (currentId === routerIdA) return true;\n\t\tif (currentId === routerIdB) return false;\n\t}\n\treturn false;\n}\n\n/**\n * Check if a Route candidate is the best choice to move focus to,\n * and store the best match.\n * @param {{\n     level: number;\n     routerId: number;\n     route: {\n       id: number;\n       focusElement: import(\"svelte/store\").Readable<Promise<Element>|null>;\n     }\n   }} item A Route candidate, that updated and is visible after a navigation\n */\nexport function pushFocusCandidate(item) {\n\tif (\n\t\t// Best candidate if it's the only candidate...\n\t\t!focusCandidate ||\n\t\t// Route is nested deeper, than previous candidate\n\t\t// -> Route change was triggered in the deepest affected\n\t\t// Route, so that's were focus should move to\n\t\titem.level > focusCandidate.level ||\n\t\t// If the level is identical, we want to focus the first Route in the document,\n\t\t// so we pick the first Router lookin from page top to page bottom.\n\t\t(item.level === focusCandidate.level &&\n\t\t\tisAbove(item.routerId, focusCandidate.routerId))\n\t) {\n\t\tfocusCandidate = item;\n\t}\n}\n\n/**\n * Reset the focus candidate.\n */\nexport function clearFocusCandidate() {\n\tfocusCandidate = null;\n}\n\nexport function initialNavigationOccurred() {\n\tinitialNavigation = false;\n}\n\n/*\n * `focus` Adapted from https://github.com/oaf-project/oaf-side-effects/blob/master/src/index.ts\n *\n * https://github.com/oaf-project/oaf-side-effects/blob/master/LICENSE\n */\nexport function focus(elem) {\n\tif (!elem) return false;\n\tconst TABINDEX = \"tabindex\";\n\ttry {\n\t\tif (!elem.hasAttribute(TABINDEX)) {\n\t\t\telem.setAttribute(TABINDEX, \"-1\");\n\t\t\tlet unlisten;\n\t\t\t// We remove tabindex after blur to avoid weird browser behavior\n\t\t\t// where a mouse click can activate elements with tabindex=\"-1\".\n\t\t\tconst blurListener = () => {\n\t\t\t\telem.removeAttribute(TABINDEX);\n\t\t\t\tunlisten();\n\t\t\t};\n\t\t\tunlisten = addListener(elem, \"blur\", blurListener);\n\t\t}\n\t\telem.focus();\n\t\treturn document.activeElement === elem;\n\t} catch (e) {\n\t\t// Apparently trying to focus a disabled element in IE can throw.\n\t\t// See https://stackoverflow.com/a/1600194/2476884\n\t\treturn false;\n\t}\n}\n\nexport function isEndMarker(elem, id) {\n\treturn Number(elem.dataset.svnavRouteEnd) === id;\n}\n\nexport function isHeading(elem) {\n\treturn /^H[1-6]$/i.test(elem.tagName);\n}\n\nfunction query(selector, parent = document) {\n\treturn parent.querySelector(selector);\n}\n\nexport function queryHeading(id) {\n\tconst marker = query(`[data-svnav-route-start=\"${id}\"]`);\n\tlet current = marker.nextElementSibling;\n\twhile (!isEndMarker(current, id)) {\n\t\tif (isHeading(current)) {\n\t\t\treturn current;\n\t\t}\n\t\tconst heading = query(\"h1,h2,h3,h4,h5,h6\", current);\n\t\tif (heading) {\n\t\t\treturn heading;\n\t\t}\n\t\tcurrent = current.nextElementSibling;\n\t}\n\treturn null;\n}\n\nexport function handleFocus(route) {\n\tPromise.resolve(get(route.focusElement)).then(elem => {\n\t\tconst focusElement = elem || queryHeading(route.id);\n\t\tif (!focusElement) {\n\t\t\twarn(\n\t\t\t\tROUTER_ID,\n\t\t\t\t\"Could not find an element to focus. \" +\n\t\t\t\t\t\"You should always render a header for accessibility reasons, \" +\n\t\t\t\t\t'or set a custom focus element via the \"useFocus\" hook. ' +\n\t\t\t\t\t\"If you don't want this Route or Router to manage focus, \" +\n\t\t\t\t\t'pass \"primary={false}\" to it.',\n\t\t\t\troute,\n\t\t\t\tROUTE_ID,\n\t\t\t);\n\t\t}\n\t\tconst headingFocused = focus(focusElement);\n\t\tif (headingFocused) return;\n\t\tfocus(document.documentElement);\n\t});\n}\n\nexport const createTriggerFocus =\n\t(a11yConfig, announcementText, location) =>\n\t(manageFocus, announceNavigation) =>\n\t\t// Wait until the dom is updated, so we can look for headings\n\t\ttick().then(() => {\n\t\t\tif (!focusCandidate || initialNavigation) {\n\t\t\t\tinitialNavigationOccurred();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (manageFocus) {\n\t\t\t\thandleFocus(focusCandidate.route);\n\t\t\t}\n\t\t\tif (a11yConfig.announcements && announceNavigation) {\n\t\t\t\tconst { path, fullPath, meta, params, uri } = focusCandidate.route;\n\t\t\t\tconst announcementMessage = a11yConfig.createAnnouncement(\n\t\t\t\t\t{ path, fullPath, meta, params, uri },\n\t\t\t\t\tget(location),\n\t\t\t\t);\n\t\t\t\tPromise.resolve(announcementMessage).then(message => {\n\t\t\t\t\tannouncementText.set(message);\n\t\t\t\t});\n\t\t\t}\n\t\t\tclearFocusCandidate();\n\t\t});\n\nexport const visuallyHiddenStyle =\n\t\"position:fixed;\" +\n\t\"top:-1px;\" +\n\t\"left:0;\" +\n\t\"width:1px;\" +\n\t\"height:1px;\" +\n\t\"padding:0;\" +\n\t\"overflow:hidden;\" +\n\t\"clip:rect(0,0,0,0);\" +\n\t\"white-space:nowrap;\" +\n\t\"border:0;\";\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter, createInlineStyle, createMarkerProps } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, setContext, onMount } from \"svelte\";\n\timport { writable } from \"svelte/store\";\n\timport { LOCATION, ROUTER } from \"./contexts\";\n\timport { globalHistory } from \"./history\";\n\timport { normalizePath } from \"./paths\";\n\timport { pick, match, normalizeLocation, parsePath } from \"./routes\";\n\timport { isSSR } from \"./utils\";\n\timport { warn, ROUTER_ID } from \"./warning\";\n\timport {\n\t\tpushFocusCandidate,\n\t\tvisuallyHiddenStyle,\n\t\tcreateTriggerFocus,\n\t} from \"./a11y\";\n\n\tconst defaultBasepath = \"/\";\n\n\texport let basepath = defaultBasepath;\n\texport let url = null;\n\texport let history = globalHistory;\n\texport let primary = true;\n\texport let a11y = {};\n\texport let disableInlineStyles = false;\n\n\tconst a11yConfig = {\n\t\tcreateAnnouncement: route => `Navigated to ${route.uri}`,\n\t\tannouncements: true,\n\t\t...a11y,\n\t};\n\n\t// Remember the initial `basepath`, so we can fire a warning\n\t// when the user changes it later\n\tconst initialBasepath = basepath;\n\tconst normalizedBasepath = normalizePath(basepath);\n\n\tconst locationContext = getContext(LOCATION);\n\tconst routerContext = getContext(ROUTER);\n\n\tconst isTopLevelRouter = !locationContext;\n\tconst routerId = createId();\n\n\tconst manageFocus = primary && !(routerContext && !routerContext.manageFocus);\n\tconst announcementText = writable(\"\");\n\n\tconst shouldDisableInlineStyles = routerContext\n\t\t? routerContext.disableInlineStyles\n\t\t: disableInlineStyles;\n\n\tconst routes = writable([]);\n\tconst activeRoute = writable(null);\n\t// Used in SSR to synchronously set that a Route is active.\n\tlet hasActiveRoute = false;\n\n\t// Nesting level of router.\n\t// We will need this to identify sibling routers, when moving\n\t// focus on navigation, so we can focus the first possible router\n\tconst level = isTopLevelRouter ? 0 : routerContext.level + 1;\n\n\t// If we're running an SSR we force the location to the `url` prop\n\tconst getInitialLocation = () =>\n\t\tnormalizeLocation(\n\t\t\tisSSR ? parsePath(url) : history.location,\n\t\t\tnormalizedBasepath,\n\t\t);\n\tconst location = isTopLevelRouter\n\t\t? writable(getInitialLocation())\n\t\t: locationContext;\n\tconst prevLocation = writable($location);\n\n\tconst triggerFocus = createTriggerFocus(\n\t\ta11yConfig,\n\t\tannouncementText,\n\t\tlocation,\n\t);\n\n\tconst createRouteFilter = routeId => routeList =>\n\t\trouteList.filter(routeItem => routeItem.id !== routeId);\n\n\tfunction registerRoute(route) {\n\t\tif (isSSR) {\n\t\t\t// In SSR we should set the activeRoute immediately if it is a match.\n\t\t\t// If there are more Routes being registered after a match is found,\n\t\t\t// we just skip them.\n\t\t\tif (hasActiveRoute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchingRoute = match(route, $location.pathname);\n\t\t\tif (matchingRoute) {\n\t\t\t\thasActiveRoute = true;\n\t\t\t\t// Return the match in SSR mode, so the matched Route can use it immediatly.\n\t\t\t\t// Waiting for activeRoute to update does not work, because it updates\n\t\t\t\t// after the Route is initialized\n\t\t\t\treturn matchingRoute; // eslint-disable-line consistent-return\n\t\t\t}\n\t\t} else {\n\t\t\troutes.update(prevRoutes => {\n\t\t\t\t// Remove an old version of the updated route,\n\t\t\t\t// before pushing the new version\n\t\t\t\tconst nextRoutes = createRouteFilter(route.id)(prevRoutes);\n\t\t\t\tnextRoutes.push(route);\n\t\t\t\treturn nextRoutes;\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction unregisterRoute(routeId) {\n\t\troutes.update(createRouteFilter(routeId));\n\t}\n\n\tif (!isTopLevelRouter && basepath !== defaultBasepath) {\n\t\twarn(\n\t\t\tROUTER_ID,\n\t\t\t'Only top-level Routers can have a \"basepath\" prop. It is ignored.',\n\t\t\t{ basepath },\n\t\t);\n\t}\n\t$: if (basepath !== initialBasepath) {\n\t\twarn(ROUTER_ID, 'You cannot change the \"basepath\" prop. It is ignored.');\n\t}\n\n\t// This reactive statement will be run when the Router is created\n\t// when there are no Routes and then again the following tick, so it\n\t// will not find an active Route in SSR and in the browser it will only\n\t// pick an active Route after all Routes have been registered.\n\t$: {\n\t\tconst bestMatch = pick($routes, $location.pathname);\n\t\tactiveRoute.set(bestMatch);\n\t}\n\n\t// Manage focus and announce navigation to screen reader users\n\t$: {\n\t\tif (isTopLevelRouter) {\n\t\t\tconst hasHash = !!$location.hash;\n\t\t\t// When a hash is present in the url, we skip focus management, because\n\t\t\t// focusing a different element will prevent in-page jumps (See #3)\n\t\t\tconst shouldManageFocus = !hasHash && manageFocus;\n\t\t\t// We don't want to make an announcement, when the hash changes,\n\t\t\t// but the active route stays the same\n\t\t\tconst announceNavigation =\n\t\t\t\t!hasHash || $location.pathname !== $prevLocation.pathname;\n\t\t\ttriggerFocus(shouldManageFocus, announceNavigation);\n\t\t}\n\t}\n\n\t// Queue matched Route, so top level Router can decide which Route to focus.\n\t// Non primary Routers should just be ignored\n\t$: if (manageFocus && $activeRoute && $activeRoute.primary) {\n\t\tpushFocusCandidate({ level, routerId, route: $activeRoute });\n\t}\n\n\tif (isTopLevelRouter) {\n\t\t// The topmost Router in the tree is responsible for updating\n\t\t// the location store and supplying it through context.\n\t\tonMount(() => {\n\t\t\tconst unlisten = history.listen(changedHistory => {\n\t\t\t\tconst normalizedLocation = normalizeLocation(\n\t\t\t\t\tchangedHistory.location,\n\t\t\t\t\tnormalizedBasepath,\n\t\t\t\t);\n\t\t\t\tprevLocation.set($location);\n\t\t\t\tlocation.set(normalizedLocation);\n\t\t\t});\n\n\t\t\treturn unlisten;\n\t\t});\n\n\t\tsetContext(LOCATION, location);\n\t}\n\n\tsetContext(ROUTER, {\n\t\tactiveRoute,\n\t\tregisterRoute,\n\t\tunregisterRoute,\n\t\tmanageFocus,\n\t\tlevel,\n\t\tid: routerId,\n\t\thistory: isTopLevelRouter ? history : routerContext.history,\n\t\tbasepath: isTopLevelRouter ? normalizedBasepath : routerContext.basepath,\n\t\tdisableInlineStyles: shouldDisableInlineStyles,\n\t});\n</script>\n\n<div\n\t{...createMarkerProps(shouldDisableInlineStyles)}\n\tdata-svnav-router={routerId}\n/>\n\n<slot />\n\n{#if isTopLevelRouter && manageFocus && a11yConfig.announcements}\n\t<div\n\t\trole=\"status\"\n\t\taria-atomic=\"true\"\n\t\taria-live=\"polite\"\n\t\tdata-svnav-announcer\n\t\t{...createInlineStyle(shouldDisableInlineStyles, visuallyHiddenStyle)}\n\t>\n\t\t{$announcementText}\n\t</div>\n{/if}\n","import { getContext, onDestroy, tick } from \"svelte\";\nimport { derived, get, writable } from \"svelte/store\";\nimport { LOCATION, ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\nimport { resolveLink, match, normalizeLocation } from \"./routes\";\nimport { isNumber } from \"./utils\";\nimport {\n\tfail,\n\tcreateLabel,\n\tUSE_FOCUS_ID,\n\tROUTER_ID,\n\tUSE_LOCATION_ID,\n\tROUTE_ID,\n\tUSE_RESOLVE_ID,\n\tUSE_RESOLVABLE_ID,\n\tUSE_NAVIGATE_ID,\n\tUSE_MATCH_ID,\n\tUSE_PARAMS_ID,\n} from \"./warning\";\n\n/**\n * Check if a component or hook have been created outside of a\n * context providing component\n * @param {number} componentId\n * @param {*} props\n * @param {string?} ctxKey\n * @param {number?} ctxProviderId\n */\nexport function usePreflightCheck(\n\tcomponentId,\n\tprops,\n\tctxKey = ROUTER,\n\tctxProviderId = ROUTER_ID,\n) {\n\tconst ctx = getContext(ctxKey);\n\tif (!ctx) {\n\t\tfail(\n\t\t\tcomponentId,\n\t\t\tlabel =>\n\t\t\t\t`You cannot use ${label} outside of a ${createLabel(ctxProviderId)}.`,\n\t\t\tprops,\n\t\t);\n\t}\n}\n\nconst toReadonly = ctx => {\n\tconst { subscribe } = getContext(ctx);\n\treturn { subscribe };\n};\n\n/**\n * Access the current location via a readable store.\n * @returns {import(\"svelte/store\").Readable<{\n    pathname: string;\n    search: string;\n    hash: string;\n    state: {};\n  }>}\n *\n * @example\n  ```html\n  <script>\n    import { useLocation } from \"svelte-navigator\";\n\n    const location = useLocation();\n\n    $: console.log($location);\n    // {\n    //   pathname: \"/blog\",\n    //   search: \"?id=123\",\n    //   hash: \"#comments\",\n    //   state: {}\n    // }\n  </script>\n  ```\n */\nexport function useLocation() {\n\tusePreflightCheck(USE_LOCATION_ID);\n\treturn toReadonly(LOCATION);\n}\n\n/**\n * @typedef {{\n    path: string;\n    fullPath: string;\n    uri: string;\n    params: {};\n  }} RouteMatch\n */\n\n/**\n * @typedef {import(\"svelte/store\").Readable<RouteMatch|null>} RouteMatchStore\n */\n\n/**\n * Access the history of top level Router.\n */\nexport function useHistory() {\n\tconst { history } = getContext(ROUTER);\n\treturn history;\n}\n\n/**\n * Access the base of the parent Route.\n */\nexport function useRouteBase() {\n\tconst route = getContext(ROUTE);\n\treturn route ? derived(route, _route => _route.base) : writable(\"/\");\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {(path: string) => string}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolve } from \"svelte-navigator\";\n\n    const resolve = useResolve();\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`\n    const resolvedLink = resolve(\"relativePath\");\n  </script>\n\n  <a href={resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolve() {\n\tusePreflightCheck(USE_RESOLVE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\t/**\n\t * Resolves the path relative to the current route and basepath.\n\t *\n\t * @param {string} path The path to resolve\n\t * @returns {string} The resolved path\n\t */\n\tconst resolve = path => resolveLink(path, get(routeBase), appBase);\n\treturn resolve;\n}\n\n/**\n * Resolve a given link relative to the current `Route` and the `Router`s `basepath`.\n * It is used under the hood in `Link` and `useNavigate`.\n * You can use it to manually resolve links, when using the `link` or `links` actions.\n *\n * @returns {import(\"svelte/store\").Readable<string>}\n *\n * @example\n  ```html\n  <script>\n    import { link, useResolvable } from \"svelte-navigator\";\n\n    // `resolvedLink` will be resolved relative to its parent Route\n    // and the Routers `basepath`.\n    const resolvedLink = useResolvable(\"relativePath\");\n  </script>\n\n  <a href={$resolvedLink} use:link>Relative link</a>\n  ```\n */\nexport function useResolvable(path) {\n\tusePreflightCheck(USE_RESOLVABLE_ID);\n\tconst routeBase = useRouteBase();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\treturn derived(routeBase, _routeBase =>\n\t\tresolveLink(path, _routeBase, appBase),\n\t);\n}\n\n/**\n * A hook, that returns a context-aware version of `navigate`.\n * It will automatically resolve the given link relative to the current Route.\n * It will also resolve a link against the `basepath` of the Router.\n *\n * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router>\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /absolutePath\n  </button>\n  ```\n  *\n  * @example\n  ```html\n  <!-- App.svelte -->\n  <script>\n    import { link, Route } from \"svelte-navigator\";\n    import RouteComponent from \"./RouteComponent.svelte\";\n  </script>\n\n  <Router basepath=\"/base\">\n    <Route path=\"route1\">\n      <RouteComponent />\n    </Route>\n    <!-- ... -->\n  </Router>\n\n  <!-- RouteComponent.svelte -->\n  <script>\n    import { useNavigate } from \"svelte-navigator\";\n\n    const navigate = useNavigate();\n  </script>\n\n  <button on:click=\"{() => navigate('relativePath')}\">\n    go to /base/route1/relativePath\n  </button>\n  <button on:click=\"{() => navigate('/absolutePath')}\">\n    go to /base/absolutePath\n  </button>\n  ```\n */\nexport function useNavigate() {\n\tusePreflightCheck(USE_NAVIGATE_ID);\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\t/**\n\t * Navigate to a new route.\n\t * Resolves the link relative to the current route and basepath.\n\t *\n\t * @param {string|number} to The path to navigate to.\n\t *\n\t * If `to` is a number we will navigate to the stack entry index + `to`\n\t * (-> `navigate(-1)`, is equivalent to hitting the back button of the browser)\n\t * @param {Object} options\n\t * @param {*} [options.state]\n\t * @param {boolean} [options.replace=false]\n\t */\n\tconst navigateRelative = (to, options) => {\n\t\t// If to is a number, we navigate to the target stack entry via `history.go`.\n\t\t// Otherwise resolve the link\n\t\tconst target = isNumber(to) ? to : resolve(to);\n\t\treturn navigate(target, options);\n\t};\n\treturn navigateRelative;\n}\n\n/**\n * Use Svelte Navigators matching without needing to use a Route.\n * Returns a readable store with the potential match,\n * that changes, when the location changes.\n *\n * The provided path will be resolved relatively,\n * as you're used to with all paths in Svelte Navigator\n *\n * @param {string} path The path, to match against.\n * It works just like a Route path\n * @returns {RouteMatchStore} The matched route.\n * Returns `null`, when nothing could be matched\n *\n * @example\n  ```html\n  <script>\n    import { useMatch } from \"svelte-navigator\";\n\n    const relativeMatch = useMatch(\"relative/path/:to/*somewhere\");\n    const absoluteMatch = useMatch(\"/absolute/path/:to/*somewhere\");\n\n    $: console.log($relativeMatch.params.to);\n    $: console.log($absoluteMatch.params.somewhere);\n  </script>\n  ```\n */\nexport function useMatch(path) {\n\tusePreflightCheck(USE_MATCH_ID);\n\tconst location = useLocation();\n\tconst resolve = useResolve();\n\tconst { basepath: appBase } = getContext(ROUTER);\n\tconst resolvedPath = resolve(path);\n\tconst { pathname: fullPath } = normalizeLocation(\n\t\t{ pathname: resolvedPath },\n\t\tappBase,\n\t);\n\treturn derived(location, loc => match({ fullPath, path }, loc.pathname));\n}\n\n/**\n * Access the parent Routes matched params and wildcards\n * @returns {import(\"svelte/store\").Readable<{\n     [param: string]: any;\n   }>} A readable store containing the matched parameters and wildcards\n *\n * @example\n  ```html\n  <!--\n    Somewhere inside <Route path=\"user/:id/*splat\" />\n    with a current url of \"/myApp/user/123/pauls-profile\"\n  -->\n  <script>\n    import { useParams } from \"svelte-navigator\";\n\n    const params = useParams();\n\n    $: console.log($params); // -> { id: \"123\", splat: \"pauls-profile\" }\n  </script>\n\n  <h3>Welcome user {$params.id}! bleep bloop...</h3>\n  ```\n */\nexport function useParams() {\n\tusePreflightCheck(USE_PARAMS_ID, null, ROUTE, ROUTE_ID);\n\treturn toReadonly(ROUTE_PARAMS);\n}\n\n/**\n * Provide a custom element to focus, when the parent route is visited.\n * It returns the `registerFocus` function you can call manually with an\n * Element or use as a Svelte action via the `use` directive.\n *\n * @example\n  ```html\n  <!-- Using `registerFocus` as a Svelte action: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p use:registerFocus>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Calling `registerFocus` manually: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    let focusElement;\n\n    onMount(() => registerFocus(focusElement))\n  </script>\n\n  <h1>Don't worry about me...</h1>\n  <p bind:this={focusElement}>Here, look at me!</p>\n  ```\n  * @example\n  ```html\n  <!-- Using `registerFocus` asyncronously: -->\n  <!-- Somewhere inside a Route -->\n  <script>\n    import { onMount } from \"svelte\";\n    import { useFocus } from \"svelte-navigator\";\n\n    const registerFocus = useFocus();\n\n    const lazyImport = import(\"./MyComponent.svelte\").then(module => module.default);\n  </script>\n\n  {#await lazyImport then MyComponent}\n    <MyComponent {registerFocus} />\n  {/await}\n\n  <!-- MyComponent.svelte -->\n  <script>\n    export let registerFocus;\n  </script>\n\n  <h1 use:registerFocus>Hi there!</h1>\n  ```\n */\nexport function useFocus() {\n\tusePreflightCheck(USE_FOCUS_ID, null, ROUTE, ROUTE_ID);\n\tconst location = useLocation();\n\tconst focusElement = getContext(FOCUS_ELEM);\n\n\tlet resolve;\n\tconst unsubscribe = location.subscribe(() => {\n\t\tconst lazyElement = new Promise(_resolve => {\n\t\t\tresolve = _resolve;\n\t\t});\n\t\tfocusElement.set(lazyElement);\n\t});\n\n\tonDestroy(unsubscribe);\n\n\treturn node => {\n\t\tlet unmounted = false;\n\t\tconst innerUnsubscribe = location.subscribe(() => {\n\t\t\ttick().then(() => {\n\t\t\t\tif (!unmounted) {\n\t\t\t\t\tresolve(node);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tunmounted = true;\n\t\t\t\tinnerUnsubscribe();\n\t\t\t},\n\t\t};\n\t};\n}\n","<script context=\"module\">\n\t// eslint-disable-next-line import/order\n\timport { createCounter, createMarkerProps } from \"./utils\";\n\n\tconst createId = createCounter();\n</script>\n\n<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { getContext, onDestroy, setContext } from \"svelte\";\n\timport { writable, get } from \"svelte/store\";\n\timport Router from \"./Router.svelte\";\n\timport { ROUTER, ROUTE, ROUTE_PARAMS, FOCUS_ELEM } from \"./contexts\";\n\timport {\n\t\tuseLocation,\n\t\tuseNavigate,\n\t\tuseRouteBase,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { isSSR } from \"./utils\";\n\timport { extractBaseUri } from \"./routes\";\n\timport { join } from \"./paths\";\n\timport { ROUTE_ID } from \"./warning\";\n\n\texport let path = \"\";\n\texport let component = null;\n\texport let meta = {};\n\texport let primary = true;\n\n\tusePreflightCheck(ROUTE_ID, $$props);\n\n\tconst id = createId();\n\n\tconst { registerRoute, unregisterRoute, activeRoute, disableInlineStyles } =\n\t\tgetContext(ROUTER);\n\tconst parentBase = useRouteBase();\n\tconst location = useLocation();\n\tconst focusElement = writable(null);\n\n\t// In SSR we cannot wait for $activeRoute to update,\n\t// so we use the match returned from `registerRoute` instead\n\tlet ssrMatch;\n\n\tconst route = writable();\n\t$: {\n\t\t// The route store will be re-computed whenever props, location or parentBase change\n\t\tconst isDefault = path === \"\";\n\t\tconst rawBase = join($parentBase, path);\n\t\tconst updatedRoute = {\n\t\t\tid,\n\t\t\tpath,\n\t\t\tmeta,\n\t\t\t// If no path prop is given, this Route will act as the default Route\n\t\t\t// that is rendered if no other Route in the Router is a match\n\t\t\tdefault: isDefault,\n\t\t\tfullPath: isDefault ? \"\" : rawBase,\n\t\t\tbase: isDefault\n\t\t\t\t? $parentBase\n\t\t\t\t: extractBaseUri(rawBase, $location.pathname),\n\t\t\tprimary,\n\t\t\tfocusElement,\n\t\t};\n\t\troute.set(updatedRoute);\n\t\t// If we're in SSR mode and the Route matches,\n\t\t// `registerRoute` will return the match\n\t\tssrMatch = registerRoute(updatedRoute);\n\t}\n\n\t$: isActive = !!(ssrMatch || ($activeRoute && $activeRoute.id === id));\n\n\tconst params = writable({});\n\t$: if (isActive) {\n\t\tconst { params: activeParams } = ssrMatch || $activeRoute;\n\t\tparams.set(activeParams);\n\t}\n\n\tsetContext(ROUTE, route);\n\tsetContext(ROUTE_PARAMS, params);\n\tsetContext(FOCUS_ELEM, focusElement);\n\n\t// We need to call useNavigate after the route is set,\n\t// so we can use the routes path for link resolution\n\tconst navigate = useNavigate();\n\n\t// There is no need to unregister Routes in SSR since it will all be\n\t// thrown away anyway\n\tif (!isSSR) {\n\t\tonDestroy(() => unregisterRoute(id));\n\t}\n</script>\n\n<div {...createMarkerProps(disableInlineStyles)} data-svnav-route-start={id} />\n{#if isActive}\n\t<Router {primary}>\n\t\t<!--\n      `$params` always returns `{}` in SSR in Route, because it will\n      update after component initialisation has already happend.\n      `get(params)` always works, but is not reactive, so we can't\n      use it in client rendered mode\n    -->\n\t\t{#if component !== null}\n\t\t\t<svelte:component\n\t\t\t\tthis={component}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t\t{...isSSR ? get(params) : $params}\n\t\t\t\t{...$$restProps}\n\t\t\t/>\n\t\t{:else}\n\t\t\t<slot\n\t\t\t\tparams={isSSR ? get(params) : $params}\n\t\t\t\tlocation={$location}\n\t\t\t\t{navigate}\n\t\t\t/>\n\t\t{/if}\n\t</Router>\n{/if}\n<div {...createMarkerProps(disableInlineStyles)} data-svnav-route-end={id} />\n","<script>\n\t/*\n\t * Adapted from https://github.com/EmilTholin/svelte-routing\n\t *\n\t * https://github.com/EmilTholin/svelte-routing/blob/master/LICENSE\n\t */\n\n\timport { createEventDispatcher } from \"svelte\";\n\timport {\n\t\tuseLocation,\n\t\tuseResolve,\n\t\tuseHistory,\n\t\tusePreflightCheck,\n\t} from \"./hooks\";\n\timport { shouldNavigate, isFunction } from \"./utils\";\n\timport { startsWith } from \"./paths\";\n\timport { LINK_ID } from \"./warning\";\n\timport { parsePath, stringifyPath } from \"./routes\";\n\n\texport let to;\n\texport let replace = false;\n\texport let state = {};\n\texport let getProps = null;\n\n\tusePreflightCheck(LINK_ID, $$props);\n\n\tconst location = useLocation();\n\tconst dispatch = createEventDispatcher();\n\tconst resolve = useResolve();\n\tconst { navigate } = useHistory();\n\n\t// We need to pass location here to force re-resolution of the link,\n\t// when the pathname changes. Otherwise we could end up with stale path params,\n\t// when for example an :id changes in the parent Routes path\n\t$: href = resolve(to, $location);\n\t$: isPartiallyCurrent = startsWith($location.pathname, href);\n\t$: isCurrent = href === $location.pathname;\n\t$: isExactCurrent = parsePath(href) === stringifyPath($location);\n\t$: ariaCurrent = isCurrent ? { \"aria-current\": \"page\" } : {};\n\t$: props = (() => {\n\t\tif (isFunction(getProps)) {\n\t\t\tconst dynamicProps = getProps({\n\t\t\t\tlocation: $location,\n\t\t\t\thref,\n\t\t\t\tisPartiallyCurrent,\n\t\t\t\tisCurrent,\n\t\t\t});\n\t\t\treturn { ...$$restProps, ...dynamicProps };\n\t\t}\n\t\treturn $$restProps;\n\t})();\n\n\tfunction onClick(event) {\n\t\tdispatch(\"click\", event);\n\n\t\tif (shouldNavigate(event)) {\n\t\t\tevent.preventDefault();\n\t\t\t// Don't push another entry to the history stack when the user\n\t\t\t// clicks on a Link to the page they are currently on.\n\t\t\tconst shouldReplace = isExactCurrent || replace;\n\t\t\tnavigate(href, { state, replace: shouldReplace });\n\t\t}\n\t}\n</script>\n\n<a {href} {...ariaCurrent} on:click={onClick} {...props}>\n\t<slot />\n</a>\n","<script>\r\n    import { Routerer, Link, Route } from \"svelte-navigator\";\r\n    export let loginRoute;\r\n\r\n    let username = \"\";\r\n    let password = \"\";\r\n    let hasBeenClicked = false;\r\n\r\n    /**\r\n    * @param {string} username\r\n    */\r\n    \r\n    function validateUsername(username) {\r\n      //  var emailRegEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;  \r\n      //  return emailRegEx.test(String(email).toLowerCase());\r\n      if(username != ''){\r\n         return username;\r\n      }\r\n    }\r\n    \r\n    \r\n    function handleSubmission() {\r\n        hasBeenClicked = true;\r\n        if (isValidUsername && isValidPassword) {\r\n            // Send data somewhere\r\n            alert(\"submitted\");\r\n        }\r\n    }\r\n\r\n    $: isValidUsername = validateUsername(username);\r\n    $: isValidPassword = password.length >= 4;\r\n    \r\n</script>\r\n\r\n\r\n    <div class = \"textField\">\r\n        <h1>Login</h1>\r\n        <div class=\"input-wrapper\">\r\n            <input class=\"eingabe\" type=\"text\" bind:value={username} placeholder=\"Username\"/>\r\n            {#if hasBeenClicked && !isValidUsername}\r\n                <p class=\"validation-error\">Invalid Username</p>\r\n            {/if}\r\n                {#if isValidUsername}\r\n            <p class=\"validation\">Valid Username</p>\r\n            {/if}\r\n        </div>\r\n        \r\n        <div class=\"input-wrapper\">\r\n            <input class=\"eingabe\" type=\"password\" bind:value={password} placeholder=\"Password\"/>\r\n                \r\n            {#if hasBeenClicked && !isValidPassword}\r\n            <p class=\"validation-error\">Please enter a longer password</p>\r\n                {/if}\r\n            {#if isValidPassword}\r\n            <p class=\"validation\">Password is save.</p>\r\n            {/if}\r\n        </div>\r\n\r\n        <!--<button class=\"btnSubmit\" on:click={handleSubmission} >Login</button>-->\r\n\r\n        {#if isValidUsername && isValidPassword}\r\n           <button class=\"btnSubmit\"><Link to=\"/settings\" >Login</Link></button>\r\n        {/if}\r\n\r\n    </div>\r\n\r\n<style>\r\n    :global(button) {\r\n        padding: 0.6em 3em 0.6em 3em;\r\n        border: none;\r\n        margin: 1%;\r\n        font-size: 18px;\r\n        cursor: pointer;\r\n        border-radius: 25px;\r\n    }\r\n\r\n    .textField{\r\n        width: 100%;\r\n        padding-left: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n\r\n    }\r\n\r\n    .input-wrapper {\r\n        flex: 1;\r\n        text-align: left;\r\n        padding-bottom: 20px;\r\n    }\r\n\r\n    .validation-error {\r\n        color: rgb(176, 30, 30);\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .validation{\r\n        color: green;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    h1 {\r\n        text-align: center;\r\n    }\r\n\r\n    .btnSubmit{\r\n        transition: 0.2s ease-in-out;\r\n        background-color: #0e80c8;\r\n        color: white;\r\n        margin-top: 5%;\r\n        margin-bottom: 10%;\r\n\r\n    }\r\n\r\n    .btnSubmit:hover{\r\n        background-color: #1f1f1f;\r\n    }\r\n\r\n    .btnSubmit:focus{\r\n        outline: none;\r\n        background-color: #1f1f1f;\r\n    }\r\n\r\n</style>","<!-- Design for the Umschaltgeschwindigkeit -->\r\n\r\n<style>\r\n    .slidecontainer{\r\n        width: 80%;\r\n        padding-left: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        padding: 4em 0 4em 0;\r\n    }\r\n\r\n    .slider {\r\n        -webkit-appearance: none;\r\n        width: 80%;\r\n        height: 5px;\r\n        border-radius: 5px;\r\n        background: #fff;\r\n        outline: none;\r\n        opacity: 0.7;\r\n        -webkit-transition: .2s;\r\n        transition: opacity .2s;\r\n    }\r\n\r\n    .slider:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    .slider::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 2px solid #0E90C8;\r\n        border-radius: 50%;\r\n        background: #0E80C8;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .slider::-moz-range-thumb {\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        background: #0E80C8;\r\n        cursor: pointer;\r\n    }\r\n\r\n    p{\r\n        color: #fff;\r\n        font-size: 18px;\r\n        text-align: center;\r\n    }\r\n\r\n    #numField{\r\n        margin-top: 3em;\r\n        width: 100px;\r\n    }\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n\r\n</style>\r\n\r\n\r\n<div class = \"slidecontainer\">\r\n    <h1>Umschaltgeschwindigkeit</h1>\r\n    <input bind:value={value} step=\"1\" on:change={setSessionStorage} type = \"range\" min = 2 max = 10 class =\"slider\" id=\"myRange\">\r\n<!--    <p>Value: <span id =\"demo\">{value}</span></p>-->\r\n    <input class = \"eingabe\" type=\"number\" id =\"numField\" bind:value={value} on:input={scream} min = 0 max = 100 >\r\n</div>\r\n\r\n<script>\r\n    import { validate_void_dynamic_element } from \"svelte/internal\";\r\n\r\n\r\n\r\n    let value = 0;\r\n\r\n    if(sessionStorage.getItem(\"displayVel\") != null) {\r\n        value = sessionStorage.getItem(\"displayVel\");\r\n    }\r\n\r\n    /**\r\n     * @param event{any}\r\n     */\r\n    function scream(event) {\r\n        const v = event.target.value;\r\n\r\n        if ( v < 0 ) {\r\n            value = 0\r\n        } else if ( v > 100 ) {\r\n            value = 100\r\n        } else if (v === \"\") {\r\n            value = 0;\r\n        } else {\r\n            value = v;\r\n        }\r\n    }\r\n\r\n    function setSessionStorage() {\r\n        sessionStorage.setItem(\"displayVel\", value);\r\n        console.log(window.sessionStorage.getItem(\"displayVel\"));\r\n    }\r\n\r\n\r\n</script>","<script>\r\n  import UmschG from \"./UmschG.svelte\";\r\n  let text = \"\";\r\n\r\n  if (sessionStorage.getItem(\"displayText\") != null) {\r\n    text = sessionStorage.getItem(\"displayText\");\r\n  }\r\n\r\n  function getText() {\r\n\r\n    setSessionStorage();\r\n  }\r\n\r\n  function setSessionStorage() {\r\n    sessionStorage.setItem(\"displayText\", text);\r\n    console.log(window.sessionStorage.getItem(\"displayText\"));\r\n  }\r\n</script>\r\n\r\n<div class=\"textField\">\r\n  <h1>Displaytext</h1>\r\n  <p>Text darf nicht mehr als 160 Zeichen beinhalten.</p>\r\n  <textarea\r\n    class=\"eingabe\"\r\n    bind:value={text}\r\n    on:input={getText}\r\n    maxlength=\"160\"\r\n  />\r\n  <p>Zeichen: <span id=\"demo2\">{text.length}</span></p>\r\n\r\n  <UmschG />\r\n</div>\r\n\r\n<style>\r\n  :global(body) {\r\n    background-color: #2e2e2e;\r\n    padding: 0;\r\n    margin: 0;\r\n    overflow-x: hidden;\r\n    color: white;\r\n    font-family: \"Courier New\", Courier, monospace;\r\n  }\r\n  p {\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n    color: rgb(150, 150, 150);\r\n  }\r\n  .textField {\r\n    width: 60%;\r\n    padding-left: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n  }\r\n</style>\r\n","<!-- Design for the LED-Helligkeit -->\r\n\r\n<style>\r\n    .slidecontainer{\r\n        width: 80%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .slider {\r\n        -webkit-appearance: none;\r\n        width: 80%;\r\n        height: 5px;\r\n        border-radius: 5px;\r\n        background: #fff;\r\n        outline: none;\r\n        opacity: 0.7;\r\n        -webkit-transition: .2s;\r\n        transition: opacity .2s;\r\n    }\r\n\r\n    .slider:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    .slider::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 2px solid #0E90C8;\r\n        border-radius: 50%;\r\n        background: #0E80C8;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .slider::-moz-range-thumb {\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        background: #0E80C8;\r\n        cursor: pointer;\r\n    }\r\n\r\n    p{\r\n        color: #fff;\r\n        font-size: 18px;\r\n        text-align: center;\r\n    }\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n\r\n    #numField{\r\n        margin-top: 3em;\r\n        width: 100px;\r\n    }\r\n</style>\r\n\r\n\r\n<div class = \"slidecontainer\">\r\n    <h1>LED-Helligkeit</h1>\r\n    <input bind:value={value} step=\"5\"  on:change={setSessionStorage} type = \"range\" min = 0 max = 100 class =\"slider\" id=\"myRange\">\r\n<!--    <p>Value: <span id =\"demo\">{value}</span></p>-->\r\n    <input class = \"eingabe\" type=\"number\" id =\"numField\" bind:value={value} on:input={scream} min = 0 max = 100 >\r\n</div>\r\n\r\n<script>\r\n    import { validate_void_dynamic_element } from \"svelte/internal\";\r\n\r\n\r\n\r\n    let value = 0;\r\n\r\n    if(sessionStorage.getItem(\"led\") != null) {\r\n        value = sessionStorage.getItem(\"led\");\r\n    }\r\n\r\n    /**\r\n     * @param event{any}\r\n     */\r\n    function scream(event) {\r\n        const v = event.target.value;\r\n\r\n        if ( v < 0 ) {\r\n            value = 0\r\n        } else if ( v > 100 ) {\r\n            value = 100\r\n        } else if (v === \"\") {\r\n            value = 0;\r\n        } else {\r\n            value = v;\r\n        }\r\n    }\r\n\r\n    function setSessionStorage() {\r\n        sessionStorage.setItem(\"led\", value);\r\n        console.log(window.sessionStorage.getItem(\"led\"));\r\n    }\r\n\r\n\r\n</script>","<!-- Design for the Motorgeschwindigkeit -->\r\n\r\n<style>\r\n    .slidecontainer{\r\n        width: 80%;\r\n        padding-left: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        padding: 4em 0 4em 0;\r\n    }\r\n\r\n    .slider {\r\n        -webkit-appearance: none;\r\n        width: 80%;\r\n        height: 5px;\r\n        border-radius: 5px;\r\n        background: #fff;\r\n        outline: none;\r\n        opacity: 0.7;\r\n        -webkit-transition: .2s;\r\n        transition: opacity .2s;\r\n    }\r\n\r\n    .slider:hover {\r\n        opacity: 1;\r\n    }\r\n\r\n    .slider::-webkit-slider-thumb {\r\n        -webkit-appearance: none;\r\n        appearance: none;\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 2px solid #0E90C8;\r\n        border-radius: 50%;\r\n        background: #0E80C8;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .slider::-moz-range-thumb {\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        background: #0E80C8;\r\n        cursor: pointer;\r\n    }\r\n\r\n    p{\r\n        color: #fff;\r\n        font-size: 18px;\r\n        text-align: center;\r\n    }\r\n\r\n    #numField{\r\n        margin-top: 3em;\r\n        width: 100px;\r\n    }\r\n\r\n    /* Chrome, Safari, Edge, Opera */\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n\r\n    /* Firefox */\r\n    input[type=number] {\r\n        -moz-appearance: textfield;\r\n    }\r\n\r\n</style>\r\n\r\n<div class = \"slidecontainer\">\r\n    <h1>Motorgeschwindigkeit</h1>\r\n    <input bind:value={value} step=\"5\" on:change={setSessionStorage}  type = \"range\" min = 0 max = 100 class =\"slider\" id=\"myRange\">\r\n<!--    <p>Value: <spafn id =\"demo\">{value}</span></p>-->\r\n    <input class = \"eingabe\" type=\"number\" id =\"numField\" bind:value={value} on:input={scream} min = 0 max = 100 >\r\n</div>\r\n\r\n<script>\r\n    import { validate_void_dynamic_element } from \"svelte/internal\";\r\n    import { browser } from \"$app/env\";\r\n\r\n    let value = 0;\r\n\r\n    if(sessionStorage.getItem(\"motor\") != null) {\r\n        value = sessionStorage.getItem(\"motor\");\r\n    }\r\n\r\n    /**\r\n     * @param event{any}\r\n     */\r\n\r\n    function setSessionStorage() {\r\n        sessionStorage.setItem(\"motor\", value);\r\n        console.log(window.sessionStorage.getItem(\"motor\"));\r\n    }\r\n\r\n    function scream(event) {\r\n\r\n        const v = event.target.value;\r\n\r\n        if ( v < 0 ) {\r\n            value = 0\r\n        } else if ( v > 100 ) {\r\n            value = 100\r\n        } else if (v === \"\") {\r\n            value = 0;\r\n        } else {\r\n            value = v;\r\n        }\r\n\r\n        setSessionStorage();\r\n    }\r\n\r\n\r\n</script>","<style>\r\n    h1{\r\n        color: white;\r\n        font-weight: 10;\r\n    }\r\n\r\n    div{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    img{\r\n        width: 70%;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <img src=\"logo_grey.svg\">\r\n</div>","<script  context=\"module\">\r\n\r\n    import Home from '../pages/Home.svelte';\r\n    import MotorG from '../pages/MotorG.svelte';\r\n    import LED from '../pages/LED.svelte';\r\n    import DisText from '../pages/DisText.svelte';\r\n    import UmschG from '../pages/UmschG.svelte';\r\n    import WlanM from '../pages/WlanM.svelte';\r\n    import Login from '../pages/Login.svelte';\r\n\r\n\r\n    export let value = Home;\r\n    //Nach dem klicken auf den Button Motorgeschwindigkeit, öffnet sich die Seite der Motorgeschwindigkeit\r\n    //TODO: Take the 'routeChange' variable from +page.svelte and use it in a switch-case (in 'Router.svelte') to not use a function for every single button\r\n    export function onclickMG(){\r\n        value = MotorG;\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function onclickHome(){\r\n        value = Home;\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function onclickLED(){\r\n        value = LED;\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function onclickDisText(){\r\n        value = DisText;\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function onclickUmschG(){\r\n        value = UmschG;\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function onclickWlanM(){\r\n        value = WlanM;\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function showRoute(){\r\n        console.log(value.name);\r\n    }\r\n\r\n    export function onclickLOG() {\r\n        value = Login;\r\n        console.log(value.name);\r\n    }\r\n</script>\r\n\r\n<svelte:component this={value}/>","<script>\r\n  import { Router, Link, Route } from \"svelte-navigator\";\r\n  import {\r\n    onclickMG,\r\n    onclickLED,\r\n    onclickDisText,\r\n    onclickUmschG,\r\n    onclickWlanM,\r\n    onclickLOG,\r\n  } from \"../app/routing/Router.svelte\";\r\n  import Routerer from \"../app/routing/Router.svelte\";\r\n  import Login from \"../app/pages/Login.svelte\";\r\n\r\n  let routeChange = \"Home\";\r\n\r\n  async function executeJava() {\r\n    const data = {\r\n      motor: sessionStorage.getItem(\"motor\"),\r\n      displayText: sessionStorage.getItem(\"displayText\"),\r\n      displayVel: sessionStorage.getItem(\"displayVel\"),\r\n      led: sessionStorage.getItem(\"led\"),\r\n    };\r\n\r\n    await fetch(\"/execute-java\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    //const result = await response.json();\r\n\r\n    //return result;\r\n  }\r\n\r\n  function SubmitValues() {\r\n    if (sessionStorage.getItem(\"motor\") != null) {\r\n      let motor = sessionStorage.getItem(\"motor\");\r\n    }\r\n  }\r\n\r\n</script>\r\n\r\n<div class=\"containerAll\">\r\n  <Router>\r\n    <Route path=\"/index.html\" component={Login}/>\r\n    <Route path=\"/settings\">\r\n      <div class=\"header\">\r\n        <div class=\"blue\"/>\r\n        <div class=\"gray\">\r\n          <img src=\"HTL-Logo.png\" />\r\n          <!--<button class=\"btn\" on:click={onclickLOG} on:click={() => (routeChange = \"LOG\")}>Login</button>-->\r\n        </div>\r\n      </div>\r\n      <!-- TODO: Take the 'routeChange' variable from +page.svelte and use it in a switch-case (in 'Router.svelte') to not use a function for every single button -->\r\n\r\n      <div class=\"containerBoth\">\r\n        <div class=\"container\">\r\n          <!--<ul2 class=\"conButton\">-->\r\n          <button class=\"btn\" on:click={onclickMG} on:click={() => (routeChange = \"MG\")}>Motorgeschwindigkeit</button>\r\n          <button class=\"btn\" on:click={onclickLED} on:click={() => (routeChange = \"LED\")}>LED</button>\r\n          <button class=\"btn\" on:click={onclickDisText} on:click={() => (routeChange = \"DT\")}>Displaytext</button>\r\n          <button class=\"btn\" on:click={() => (routeChange = \"WM\")}>WLAN-Modus</button>\r\n          <button class=\"btnSubmit\" on:click={executeJava}>Submit</button>\r\n          <!-- </ul2> -->\r\n        </div>\r\n        <!-- <p>Visit <a href=\"https://kit.svelte.dev\">kit.svelte.dev</a> to read the documentation</p> -->\r\n        <div class=\"container2\">\r\n          {#key routeChange}\r\n            <Routerer />\r\n          {/key}\r\n        </div>\r\n      </div>\r\n    </Route>\r\n  </Router>\r\n</div>\r\n\r\n<!--\r\n<MotorG/>\r\n<Home/>\r\n-->\r\n\r\n<!-- Click()-> Funktion erstellen, damit die Button Funktion funktioniert. Wenn auf Button geklickt wird sollte Nested.svelte geöffnet werden. -->\r\n<!-- npm run dev (Terminal) -->\r\n\r\n<!-- <h1>Welcome to SvelteKit</h1>\r\n<p>Visit <a href=\"https://kit.svelte.dev\">kit.svelte.dev</a> to read the documentation</p> -->\r\n<style>\r\n  :global(body) {\r\n    background-color: #2e2e2e;\r\n    padding: 0;\r\n    margin: 0;\r\n    padding-top: 90px;\r\n    overflow-x: hidden;\r\n    font-family: calibri light, arial;\r\n  }\r\n\r\n  h1 {\r\n    color: white;\r\n    text-align: center;\r\n    font-size: 37px;\r\n    margin-bottom: 5%;\r\n  }\r\n\r\n  :global(button) {\r\n    padding: 0.6em 3em 0.6em 3em;\r\n    border: none;\r\n    margin: 1%;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    border-radius: 25px;\r\n  }\r\n\r\n  :global(.btn) {\r\n    color: #fff;\r\n    background-color: #161616;\r\n  }\r\n\r\n  :global(.btn:hover) {\r\n    transition: 0.2s ease-in-out;\r\n    background-color: #0e80c8;\r\n    color: white;\r\n  }\r\n\r\n  :global(.btn:focus) {\r\n    outline: none;\r\n    background-color: #0e80c8;\r\n  }\r\n\r\n  :global(.btnSubmit) {\r\n    transition: 0.2s ease-in-out;\r\n    background-color: #0e80c8;\r\n    color: white;\r\n    margin-top: 5%;\r\n    margin-bottom: 10%;\r\n  }\r\n\r\n  :global(.btnSubmit:hover) {\r\n    background-color: #1f1f1f;\r\n  }\r\n\r\n  :global(.btnSubmit:focus) {\r\n    outline: none;\r\n    background-color: #1f1f1f;\r\n  }\r\n\r\n  .header {\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  .blue {\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 1px solid #0e80c8;\r\n    background-color: #0e80c8;\r\n    width: 100%;\r\n    padding: 1px 50%;\r\n    height: 4px;\r\n  }\r\n\r\n  .gray {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    list-style-type: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    border: 1px solid #4e4e4e;\r\n    background-color: #4e4e4e;\r\n    width: 100%;\r\n  }\r\n\r\n  img {\r\n    margin-left: 20px;\r\n    width: 200px;\r\n  }\r\n\r\n  :global(.eingabe) {\r\n    padding: 0.7em;\r\n    width: 100%;\r\n    margin-bottom: 1em;\r\n    border: none;\r\n    border-radius: 10px;\r\n    transition: 0.1s ease-in-out;\r\n  }\r\n\r\n  :global(.eingabe:focus) {\r\n    outline: 2px solid #0e80c8;\r\n  }\r\n\r\n  .containerBoth {\r\n    overflow: hidden;\r\n    display: grid;\r\n    grid: 1fr / 30% 1fr;\r\n    width: 100%;\r\n    margin-top: 5em;\r\n  }\r\n\r\n  .container {\r\n    justify-content: start;\r\n    margin-top: 2em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 2em;\r\n    width: 100%;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n\r\n  .container2 {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    float: right;\r\n    justify-self: center;\r\n    height: 100%;\r\n    padding-top: 3em;\r\n  }\r\n\r\n\r\n  @media (max-width: 780px) {\r\n    ul {\r\n      position: sticky;\r\n      top: 0;\r\n    }\r\n\r\n    .container {\r\n      width: 90%;\r\n      position: relative;\r\n      grid-column: 1 / -1;\r\n    }\r\n\r\n    .container2 {\r\n      width: 100%;\r\n      padding-bottom: 4em;\r\n      grid-column: 1 / -1;\r\n      padding-top: 1em;\r\n    }\r\n  }\r\n</style>\r\n","import App from './routes/App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.getElementById('app')\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","contenteditable_truthy_values","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","always_set_through_set_attribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","indexOf","to_number","set_data","set_input_value","input","construct_svelte_component","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","bubbles","e","createEvent","initCustomEvent","custom_event","call","defaultPrevented","setContext","context","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","destroy_component","detaching","filtered","targets","flush_render_callbacks","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","isUndefined","isFunction","isNumber","createCounter","isSSR","window","addListener","createInlineStyle","disableInlineStyles","createMarkerProps","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","readable","started","values","pending","cleanup","sync","unsubscribers","createKey","ctxName","LOCATION","ROUTER","ROUTE","ROUTE_PARAMS","FOCUS_ELEM","paramRegex","substr","str","end","startsWith","string","search","isRootSegment","segment","isDynamic","test","isSplat","stripSplat","replace","stripSlashes","segmentize","uri","filterFalsy","segments","split","Boolean","addQuery","pathname","query","normalizePath","path","join","pathFragments","joinedSegments","LINK_ID","ROUTE_ID","ROUTER_ID","USE_LOCATION_ID","USE_NAVIGATE_ID","USE_RESOLVE_ID","labels","createLabel","labelId","createMessage","message","originId","origin","to","basepath","createIdentifier","originMsg","label","createMessageHandler","args","fail","warn","console","SEGMENT_POINTS","STATIC_POINTS","DYNAMIC_POINTS","SPLAT_PENALTY","ROOT_POINTS","rankRoute","route","score","default","fullPath","reduce","acc","nextScore","pick","routes","bestMatch","defaultMatch","uriPathname","uriSegments","isRootUri","ranked","sort","rankRoutes","missed","params","createMatch","routeSegments","routeSegment","uriSegment","splatName","decodeURIComponent","dynamicMatch","exec","match","normalizeLocation","location","hash","state","baseSegments","pathSegments","shift","normalizeUrlFragment","frag","parsePath","searchIndex","hashIndex","hasSearchIndex","hasHashIndex","pathnameAndSearch","resolveLink","routeBase","appBase","base","toPathname","toQuery","basePathname","toSegments","concat","allSegments","extractBaseUri","routePath","routeMatch","POP","getLocation","source","encodeURI","decodeURI","history","_key","createStackFrame","canUseDOM","isEmbeddedPage","globalHistory","listeners","action","notifyListeners","listenerFns","listener","unlisten","navigate","go","keyedState","random","toString","substring","createHistory","initialPathname","stack","entries","pushState","title","replaceState","newIndex","createMemorySource","focusCandidate","initialNavigation","pushFocusCandidate","item","level","routerIdA","routerIdB","routerMarkers","querySelectorAll","currentId","Number","dataset","svnavRouter","isAbove","routerId","focus","elem","TABINDEX","hasAttribute","blurListener","activeElement","isEndMarker","id","svnavRouteEnd","selector","parent","querySelector","handleFocus","focusElement","current","nextElementSibling","tagName","heading","queryHeading","documentElement","createTriggerFocus","a11yConfig","announcementText","manageFocus","announceNavigation","announcements","meta","announcementMessage","createAnnouncement","visuallyHiddenStyle","div","attr_value","wholeText","set_data_contenteditable","div_data","if_block","create_if_block","createId","defaultBasepath","url","primary","a11y","initialBasepath","normalizedBasepath","locationContext","routerContext","isTopLevelRouter","shouldDisableInlineStyles","activeRoute","hasActiveRoute","prevLocation","$location","triggerFocus","createRouteFilter","routeId","routeList","routeItem","changedHistory","normalizedLocation","registerRoute","matchingRoute","prevRoutes","nextRoutes","unregisterRoute","$routes","hasHash","shouldManageFocus","$prevLocation","$activeRoute","usePreflightCheck","componentId","ctxKey","ctxProviderId","toReadonly","useLocation","useHistory","useRouteBase","_route","useResolve","div0","div1","parentBase","ssrMatch","useNavigate","isDefault","rawBase","$parentBase","updatedRoute","$$invalidate","isActive","activeParams","a_levels","href","getProps","dispatch","isPartiallyCurrent","isCurrent","isExactCurrent","stringifyPath","ariaCurrent","dynamicProps","$$restProps","button","metaKey","altKey","ctrlKey","shiftKey","shouldNavigate","preventDefault","if_block0","create_if_block_4","create_if_block_3","if_block2","create_if_block_2","create_if_block_1","if_block4","div2","h1","input0","input1","loginRoute","username","password","isValidUsername","validateUsername","isValidPassword","sessionStorage","getItem","v","setItem","log","t6_value","p0","textarea","p1","span","t6","setSessionStorage","onclickMG","MotorG","onclickLED","LED","onclickDisText","DisText","div5","div3","button0","button1","button2","button3","button4","div4","executeJava","Login","motor","displayText","displayVel","led","fetch","method","headers","body","JSON","stringify","routeChange","getElementById"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}